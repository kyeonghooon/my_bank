<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tenco.bank.repository.interfaces.HistoryRepository">

	<!-- 반드시 세미콜론을 제거 해야 한다. -->
	<!-- id는 매칭되어 있는 인터페이스에 메서드 명과 같아야 한다. -->
	<insert id="insert">
		insert into history_tb(amount, w_balance, d_balance, w_account_id, d_account_id)
		values(#{amount},#{wBalance},#{dBalance},#{wAccountId},#{dAccountId})
	</insert>
	<update id="updateById">
		update history_tb set
		amount = #{amount},
		w_balance = #{wBalance},
		d_balance = #{dBalance},
		w_account_id = #{wAccountId},
		d_account_id = #{dAccountId}
		where id = #{id}
	</update>

	<delete id="deleteById">
		delete from history_tb where id = #{id}
	</delete>

	<select id="findById" resultType="com.tenco.bank.repository.model.History">
		select * from history_tb where id = #{id}
	</select>

	<select id="findAll" resultType="com.tenco.bank.repository.model.History">
		select * from history_tb
	</select>

	<select id="findByAccountIdAndTypeOfHistory" resultType="com.tenco.bank.repository.model.HistoryAccount">
		<if test="type == 'all'">
			SELECT h.id, h.amount,
			CASE
			WHEN h.d_account_id = #{accountId} THEN h.d_balance
			WHEN h.w_account_id = #{accountId} THEN h.w_balance
			END AS balance,
			COALESCE(CAST(wa.number AS CHAR(10)), 'ATM') AS sender,
			COALESCE(CAST(da.number AS CHAR(10)), 'ATM') AS receiver,
			h.created_at
			FROM history_tb h
			LEFT JOIN account_tb da ON
			h.d_account_id = da.id
			LEFT JOIN account_tb wa ON h.w_account_id = wa.id
			WHERE h.d_account_id = #{accountId}
			OR h.w_account_id = #{accountId}
			ORDER BY h.created_at DESC
			LIMIT
			#{limit} OFFSET #{offset}
		</if>
		<if test="type == 'deposit'">
			SELECT h.id, h.amount, h.d_balance AS balance,
			COALESCE(CAST(wa.number AS CHAR(10)), 'ATM') AS sender,
			da.number AS receiver,
			h.created_at
			FROM history_tb AS h
			LEFT JOIN
			account_tb da ON h.d_account_id = da.id
			LEFT JOIN account_tb wa ON h.w_account_id = wa.id
			WHERE h.d_account_id = #{accountId}
			ORDER BY h.created_at DESC
			LIMIT #{limit} OFFSET
			#{offset}
		</if>
		<if test="type == 'withdrawal'">
			SELECT h.id, h.amount, h.w_balance AS balance,
			wa.number AS sender,
			COALESCE(CAST(da.number AS CHAR(10)), 'ATM') AS receiver,
			h.created_at
			FROM history_tb AS h
			LEFT JOIN
			account_tb da ON h.d_account_id = da.id
			LEFT JOIN account_tb wa ON h.w_account_id = wa.id
			WHERE h.w_account_id = #{accountId}
			ORDER BY h.created_at DESC
			LIMIT #{limit} OFFSET
			#{offset}
		</if>
	</select>
	<select id="countHistoryByAccountIdAndType" resultType="int">
		<if test="type == 'all'">
			SELECT count(*)
			FROM history_tb
			WHERE d_account_id = #{accountId}
			OR w_account_id = #{accountId}
		</if>
		<if test="type == 'deposit'">
			SELECT count(*)
			FROM history_tb
			WHERE d_account_id =
			#{accountId}
		</if>
		<if test="type == 'withdrawal'">
			SELECT count(*)
			FROM history_tb
			WHERE w_account_id =
			#{accountId}
		</if>
	</select>
</mapper>